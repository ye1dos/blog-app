version: "3.8"
services:
  # nginx:
  #   image: nginx:latest
  #   restart: unless-stopped
  #   container_name: ${PROJECT_SLUG}_nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - internal
  #   volumes:
  #     - ./backend/public:/app/backend/public
  #     - ./frontend/public:/app/frontend/public
  #     - ./conf/nginx/:/etc/nginx:ro
  #     - ./logs/nginx/:/var/log/nginx
  #     - /etc/localtime:/etc/localtime:ro
  #   depends_on:
  #     - frontend
  #     - backend

  # frontend:
  #   container_name: ${PROJECT_SLUG}_frontend
  #   build:
  #     context: .
  #     dockerfile: ./docker/frontend/${ENVIRONMENT}/Dockerfile
  #     args:
  #       - NODE_ENV=${ENVIRONMENT}
  #   restart: unless-stopped
  #   networks:
  #     - internal
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #     - /app/.next
  #     - ./logs/frontend:/root/.npm/_logs
  #   env_file:
  #     - ./.env

  backend:
    image: mystrapi:latest
    container_name: ${PROJECT_SLUG}_backend
    build:
      context: .
      dockerfile: ./docker/backend/${ENVIRONMENT}/Dockerfile
      args:
        - NODE_ENV=${ENVIRONMENT}
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${ENVIRONMENT}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./.env:/app/.env
    networks:
      - internal
    depends_on:
      - postgres
    ports:
      - 1337:1337

  postgres:
    image: postgres:12.0-alpine
    container_name: ${PROJECT_SLUG}_postgres
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    networks:
      - internal

volumes:
  postgres-data:

networks:
  internal:
    name: ${PROJECT_SLUG}_internal
    driver: bridge
